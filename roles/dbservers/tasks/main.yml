---
- name: Install required database system packages.
  apt: pkg={{ item }} state=installed update-cache=yes
  sudo: true
  with_items: system_packages_db
  when: "'server-provision' in stages"
  tags:
    - server-provision

# - name: restart machine
#   command: shutdown -r now "Ansible updates triggered"
#   async: 0
#   poll: 0
#   ignore_errors: true
#
# - name: waiting for server to come back
#   local_action: wait_for host={{ inventory_hostname }}
#                 port={{ ansible_ssh_port }} state=started
#   sudo: false
#
- name: Update postgresql conf
  template: src=postgresql.conf.j2 dest=/etc/postgresql/9.3/main/postgresql.conf
  sudo: true
  notify: restart postgres
  when: "'server-provision' in stages"
  tags:
    - server-provision

- name: Update pg_hba conf
  template: src=pg_hba.conf.j2 dest=/etc/postgresql/9.3/main/pg_hba.conf
  sudo: true
  sudo_user: postgres
  notify: restart postgres
  when: "'server-provision' in stages"
  tags:
    - server-provision

- name: Copy the sqlcreate file
  copy:
    src: /tmp/{{ item.projectname }}_sqlcreate.txt
    dest: /tmp/{{ item.projectname }}_sqlcreate.txt
  with_items: projects
  when: "'fresh-deploy' in stages"
  tags:
    - fresh_deploy

- name: Run the sqlcreate script
  shell: "cat /tmp/{{ item.projectname }}_sqlcreate.txt | sudo -u postgres psql "
  sudo: true
  with_items: projects
  when: "'fresh-deploy' in stages"
  tags:
    - fresh_deploy
